library(tidyverse)
library(readxl)
sim.multi.jun <- read_excel("Desktop/2020hsmcResearch/simulationData/simmulti.xlsx")
metadata <- read_excel("Desktop/2020hsmcResearch/simulationData/metadata.xlsx")
sim.multi<- simmulti%>%mutate(alpha0hat = as.numeric(alpha0hat), gammahat = as.numeric(gammahat))

library(moments)
library(knitr)
library(latex2exp)

#function for calculating variance based on Fisher Information
modvar <- function ( p3,p5,Tim,M)
{
  if(p5 == 0)
  {
    EValphaa <- exp(p3) *(Tim^2 - (exp(-M/Tim)) * Tim^2)/M
    EValphaandgam <- exp(p3) * (M*Tim)/2
    EVgamma <- exp(p3) * (3*M*Tim + 2*Tim*M^2)/6
  }
  else
  {
    EValphaa<- (exp(p3)*((1-exp(p5))^-1)*Tim*(M)^-1*(1-exp(M)^(exp(p5)-1)))
    EValphaandgam<- (exp(p3)*Tim*exp(p5)*(1-exp(p5))^-2*(((1-exp(-M))*(M)^-1)-
      (exp(-M)*exp(M*exp(p5)))+exp(-M)*(M)^-1*(exp(exp(p5)*M)*(exp(p5)*M-1)+1)))
    EVgamma<- exp(p3)*Tim*exp(p5)*(1-exp(p5))^-3*(
      (1+exp(p5))*(1-exp(-M))*(M)^-1-
        exp(-M)*exp(exp(p5)*M)*(exp(p5)*M+1)+(2-exp(p5))*exp(-M)*M^-1*(
          exp(exp(p5)*M)*(1-exp(p5)*M+(exp(p5)*M)^2)-1
        )+ 2*exp(-M)*M^-1*(
          exp(exp(p5)*M)*(exp(p5)*M-1)+1
        )-exp(-M)*(M)^-1*(exp(exp(p5)*M)-1))
  }
  
  return(matrix(c(EValphaa, EValphaandgam, EValphaandgam, EVgamma),nrow=2,ncol=2))
}

#plotting the deensity plot of the maximum likelihood estimates for gamma
as.data.frame(sim.multi)%>%filter(gamma == .01, alpha0 == -1.4, is.na(gammahat) == FALSE)%>%ggplot(aes(x=gammahat))+geom_density(adjust = 1.5)+
  annotate("segment", x = .01, xend = .01, y = 0, yend = 9,colour = "red")+
  labs(x = TeX('$\\hat{\\gamma}$'), y = "density")+
  xlim(-.15, .25)+
  theme_classic()
  
#testing for normality using skewness and kurtosis
agostino.test((as.data.frame(sim.multi)%>%filter(gamma == .01, alpha0 == -1.4, is.na(gammahat) == FALSE))$gammahat)
anscombe.test((as.data.frame(sim.multi)%>%
                 filter(gamma == .01, alpha0 == -1.4, is.na(gammahat) == FALSE))$gammahat)

#plotting the deensity plot of the maximum likelihood estimates for alpha
as.data.frame(sim.multi)%>%
  filter(gamma == .01, alpha0 == -1.4, is.na(alpha0hat) == FALSE)%>%
  ggplot(aes(alpha0hat))+geom_density()+
  annotate("segment", x = -1.4, xend = -1.4, y = 0, yend = 1,colour = "red")+
  labs(x = TeX('$\\hat{\\alpha_0}$'), y = "density")+
  xlim(-3, 0)+
  theme_classic()
  
#testing for normality using skewness and kurtosis 
agostino.test((as.data.frame(sim.multi)%>%
                 filter(gamma == .01, alpha0 == -1.4, is.na(alpha0hat) == FALSE))$alpha0hat)
anscombe.test((as.data.frame(sim.multi)%>%
                 filter(gamma == .01, alpha0 == -1.4, is.na(alpha0hat) == FALSE))$alpha0hat)
